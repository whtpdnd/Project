/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.81
 * Generated at: 2022-12-05 13:45:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"EUC-KR\">\r\n");
      out.write("		<title>Insert title here</title>\r\n");
      out.write("		<script src=\"./js/jquery-3.6.0.js\"></script>\r\n");
      out.write("		<script src=\"./js/common.js\"></script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<style>\r\n");
      out.write("	.login_input\r\n");
      out.write("	{\r\n");
      out.write("		width:300px;\r\n");
      out.write("		height:50px;\r\n");
      out.write("	}\r\n");
      out.write("	.userID\r\n");
      out.write("	{\r\n");
      out.write("		width:225px;\r\n");
      out.write("		height:50px;\r\n");
      out.write("	}\r\n");
      out.write("	.btn_join \r\n");
      out.write("	{\r\n");
      out.write("		width: 308px;\r\n");
      out.write("		height: 50px;\r\n");
      out.write("		font-family: 'Roboto', sans-serif;\r\n");
      out.write("		font-size: 11px;\r\n");
      out.write("		text-transform: uppercase;\r\n");
      out.write("		letter-spacing: 2.5px;\r\n");
      out.write("		font-weight: 500;\r\n");
      out.write("		color: #000;\r\n");
      out.write("		background-color: #2EE59D;\r\n");
      out.write("		border: none;\r\n");
      out.write("		box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("		transition: all 0.3s ease 0s;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		outline: none;\r\n");
      out.write("	}\r\n");
      out.write("	.btn_join:hover \r\n");
      out.write("	{\r\n");
      out.write("		background-color: #00ff00;\r\n");
      out.write("		box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\r\n");
      out.write("		color: #000;\r\n");
      out.write("		transform: translateY(-3px);\r\n");
      out.write("	}\r\n");
      out.write("	.btn_duplicate \r\n");
      out.write("	{\r\n");
      out.write("		width: 70px;\r\n");
      out.write("		height: 50px;\r\n");
      out.write("		font-family: 'Roboto', sans-serif;\r\n");
      out.write("		font-size: 11px;\r\n");
      out.write("		text-transform: uppercase;\r\n");
      out.write("		letter-spacing: 2.5px;\r\n");
      out.write("		font-weight: 500;\r\n");
      out.write("		color: #000;\r\n");
      out.write("		background-color: #2EE59D;\r\n");
      out.write("		border: none;\r\n");
      out.write("		box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("		transition: all 0.3s ease 0s;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		outline: none;\r\n");
      out.write("	}\r\n");
      out.write("	.btn_duplicate:hover \r\n");
      out.write("	{\r\n");
      out.write("		background-color: #00ff00;\r\n");
      out.write("		box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\r\n");
      out.write("		color: #000;\r\n");
      out.write("		transform: translateY(-1px);\r\n");
      out.write("	}  \r\n");
      out.write("	</style>\r\n");
      out.write("	<script>\r\n");
      out.write("	window.onload = function()\r\n");
      out.write("	{\r\n");
      out.write("		$(\"#userID\").focus();\r\n");
      out.write("		$(\"#btn_join\").click(function(){\r\n");
      out.write("			if(DoCheckEmpty() == true && DoCheckJoinTerms() == true)\r\n");
      out.write("			{\r\n");
      out.write("				if(confirm(\"가입을 완료 하시겠습니까?\"))\r\n");
      out.write("				{\r\n");
      out.write("					alert(\"가입이 완료되었습니다\");\r\n");
      out.write("					//$('#join').submit();\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	//가입조건\r\n");
      out.write("	function DoCheckJoinTerms()\r\n");
      out.write("	{\r\n");
      out.write("		if($(\"#userPW\").val() != $(\"#PWCheck\").val())\r\n");
      out.write("		{\r\n");
      out.write("			alert(\"비밀번호가 일치하지 않습니다\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(!$(\"input[name='gender']:checked\").is(\":checked\"))\r\n");
      out.write("		{\r\n");
      out.write("			alert(\"성별을 선택해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("	<body>\r\n");
      out.write("	<form id=\"join\" name=\"join\" method=\"post\" action=\"joinok.jsp\" onsubmit=\"return false\";>\r\n");
      out.write("		<table border=\"0\" style=\"width:100%;\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"center\">\r\n");
      out.write("					<img src=\"./img/melon.jpg\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"padding-left:80px;\">\r\n");
      out.write("					<input class=\"userID\" id=\"userID\" name=\"userID\" type=\"text\" placeholder=\"아이디를 입력하세요.\" must=\"아이디를 입력하세요.\">\r\n");
      out.write("					<input type=\"button\" class=\"btn_duplicate\" id=\"btn_duplicate\" name=\"btn_duplicate\" value=\"중복확인\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"padding-left:80px;\">\r\n");
      out.write("					<input class=\"login_input\" id=\"userPW\" name=\"userPW\" type=\"password\" placeholder=\"비밀번호를 입력하세요.\"  must=\"비밀번호를 입력하세요.\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"padding-left:80px;\">\r\n");
      out.write("					<input class=\"login_input\" id=\"PWCheck\" name=\"PWCheck\" type=\"password\" placeholder=\"비밀번호를 한 번 더 입력하세요.\" must=\"비밀번호를 확인해주세요.\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"padding-left:80px;\">\r\n");
      out.write("					<input class=\"login_input\" id=\"userBirth\" name=\"userBirth\" type=\"text\" maxlength=\"8\" placeholder=\"생년월일(YYYYMMDD) ex:19931015\" must=\"생년월일을 입력하세요\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"padding-left:150px;\">\r\n");
      out.write("					<br>\r\n");
      out.write("					<input type=\"radio\" id=\"gender\" name=\"gender\" value=\"M\">남자\r\n");
      out.write("					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("					<input type=\"radio\" id=\"gender\" name=\"gender\" value=\"W\">여자\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"padding-left:80px;\">\r\n");
      out.write("					<br>\r\n");
      out.write("					<input type=\"button\" class=\"btn_join\" id=\"btn_join\" name=\"btn_join\" value=\"회원가입\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
